@model QuanLyDKHP.Models.CauHinhDKHP
@{
    ViewBag.Title = "Thêm mới cấu hình đăng ký học phần";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="container-fluid py-3">
    <div class="d-flex align-items-center justify-content-between mb-3">
        <h1 class="h3 mb-0 text-gray-800">Thêm mới cấu hình đăng ký học phần</h1>
        <a href="@Url.Action("Index")" class="btn btn-outline-secondary">
            <i class="fas fa-arrow-left me-1"></i> Quay lại danh sách
        </a>
    </div>

    @using (Html.BeginForm(null, null, FormMethod.Post, new { @class = "needs-validation", id = "configForm" }))
    {
        @Html.AntiForgeryToken()

        <div class="row">
            <div class="col-lg-8">
                <!-- Thông tin cơ bản -->
                <div class="card shadow-sm mb-4">
                    <div class="card-header py-3 bg-white">
                        <h6 class="m-0 font-weight-bold text-primary">Thông tin cấu hình</h6>
                    </div>
                    <div class="card-body">
                        @if (!ViewData.ModelState.IsValid)
                        {
                            <div class="alert alert-danger alert-dismissible fade show mb-4" role="alert">
                                <i class="fas fa-exclamation-triangle me-2"></i>
                                <strong>Lỗi!</strong> Vui lòng kiểm tra lại thông tin nhập liệu.
                                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
                            </div>
                        }

                        <div class="row g-3 mb-3">
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    @Html.LabelFor(model => model.ID_NH, "Năm học", htmlAttributes: new { @class = "form-label fw-bold" })
                                    @Html.DropDownList("ID_NH", null, "-- Chọn năm học --", htmlAttributes: new { @class = "form-select", required = "required" })
                                    @Html.ValidationMessageFor(model => model.ID_NH, "", new { @class = "text-danger" })
                                    <div class="form-text text-muted">Chọn năm học cho cấu hình đăng ký</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    @Html.LabelFor(model => model.ID_HK, "Học kỳ", htmlAttributes: new { @class = "form-label fw-bold" })
                                    @Html.DropDownList("ID_HK", null, "-- Chọn học kỳ --", htmlAttributes: new { @class = "form-select", required = "required" })
                                    @Html.ValidationMessageFor(model => model.ID_HK, "", new { @class = "text-danger" })
                                    <div class="form-text text-muted">Chọn học kỳ cho cấu hình đăng ký</div>
                                </div>
                            </div>
                        </div>

                        <div class="row g-3 mb-3">
                            <div class="col-md-4">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.SoTC_ToiDa, "Số tín chỉ tối đa", htmlAttributes: new { @class = "form-label fw-bold" })
                                    <div class="input-group">
                                        @Html.EditorFor(model => model.SoTC_ToiDa, new { htmlAttributes = new { @class = "form-control", type = "number", min = "1", max = "30", required = "required" } })
                                        <span class="input-group-text">TC</span>
                                    </div>
                                    @Html.ValidationMessageFor(model => model.SoTC_ToiDa, "", new { @class = "text-danger" })
                                    <div class="form-text text-muted">Số tín chỉ tối đa sinh viên được phép đăng ký</div>
                                </div>
                            </div>
                        </div>

                        <div class="row g-3">
                            <div class="col-md-6">
                                <div class="form-group mb-3">
                                    @Html.LabelFor(model => model.NgayBatDau, "Ngày bắt đầu", htmlAttributes: new { @class = "form-label fw-bold" })
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="fas fa-calendar-alt"></i></span>
                                        @Html.EditorFor(model => model.NgayBatDau, new { htmlAttributes = new { @class = "form-control", type = "datetime-local", required = "required" } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.NgayBatDau, "", new { @class = "text-danger" })
                                    <div class="form-text text-muted">Thời điểm bắt đầu mở đăng ký học phần</div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    @Html.LabelFor(model => model.NgayKetThuc, "Ngày kết thúc", htmlAttributes: new { @class = "form-label fw-bold" })
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="fas fa-calendar-alt"></i></span>
                                        @Html.EditorFor(model => model.NgayKetThuc, new { htmlAttributes = new { @class = "form-control", type = "datetime-local", required = "required" } })
                                    </div>
                                    @Html.ValidationMessageFor(model => model.NgayKetThuc, "", new { @class = "text-danger" })
                                    <div class="form-text text-muted">Thời điểm kết thúc đăng ký học phần</div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-lg-4">
                <!-- Thông tin bổ sung -->
                <div class="card shadow-sm mb-4">
                    <div class="card-header py-3 bg-white">
                        <h6 class="m-0 font-weight-bold text-primary">Tùy chọn bổ sung</h6>
                    </div>
                    <div class="card-body">
                        <div class="form-check form-switch mb-3">
                            <input class="form-check-input" type="checkbox" id="activeOnCreate" name="ActiveOnCreate" value="true">
                            <label class="form-check-label" for="activeOnCreate">Kích hoạt ngay sau khi tạo</label>
                            <div class="form-text text-muted">Tự động kích hoạt cấu hình này sau khi tạo xong</div>
                        </div>

                        <div class="form-check form-switch mb-3">
                            <input class="form-check-input" type="checkbox" id="notifyStudents" name="NotifyStudents" value="true">
                            <label class="form-check-label" for="notifyStudents">Gửi thông báo cho sinh viên</label>
                            <div class="form-text text-muted">Gửi email thông báo cho sinh viên về đợt đăng ký mới</div>
                        </div>

                        <hr>

                        <div class="alert alert-info mb-0">
                            <div class="d-flex">
                                <div class="me-3">
                                    <i class="fas fa-info-circle fa-2x"></i>
                                </div>
                                <div>
                                    <h6 class="alert-heading">Lưu ý quan trọng</h6>
                                    <p class="mb-0">Thời gian đăng ký nên được thiết lập trước thời gian thực tế ít nhất 1 tuần để sinh viên có thể chuẩn bị.</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Nút thao tác -->
                <div class="card shadow-sm">
                    <div class="card-body">
                        <button type="submit" class="btn btn-primary btn-lg w-100 mb-3">
                            <i class="fas fa-save me-1"></i> Lưu cấu hình
                        </button>
                        <a href="@Url.Action("Index")" class="btn btn-outline-secondary w-100">
                            <i class="fas fa-times me-1"></i> Hủy bỏ
                        </a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function() {
            // Form validation
            $("#configForm").submit(function(e) {
                const startDate = new Date($("#NgayBatDau").val());
                const endDate = new Date($("#NgayKetThuc").val());

                if (endDate <= startDate) {
                    e.preventDefault();
                    alert("Ngày kết thúc phải lớn hơn ngày bắt đầu!");
                    return false;
                }

                // Kiểm tra số tín chỉ
                const soTC = parseInt($("#SoTC_ToiDa").val());
                if (soTC < 1 || soTC > 30) {
                    e.preventDefault();
                    alert("Số tín chỉ tối đa phải từ 1 đến 30!");
                    return false;
                }
            });

            // Xử lý hiển thị datetime-local
            const today = new Date();
            const ngayBD = document.getElementById('NgayBatDau');
            const ngayKT = document.getElementById('NgayKetThuc');

            // Nếu chưa có giá trị, đặt mặc định
            if (!ngayBD.value) {
                // Mặc định ngày bắt đầu là ngày hôm nay + 7 ngày
                const defaultStart = new Date();
                defaultStart.setDate(today.getDate() + 7);
                ngayBD.value = defaultStart.toISOString().slice(0, 16);
            }

            if (!ngayKT.value) {
                // Mặc định ngày kết thúc là ngày hôm nay + 14 ngày
                const defaultEnd = new Date();
                defaultEnd.setDate(today.getDate() + 14);
                ngayKT.value = defaultEnd.toISOString().slice(0, 16);
            }
        });
    </script>
}